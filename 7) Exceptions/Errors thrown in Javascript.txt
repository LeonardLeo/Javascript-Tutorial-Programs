Error Types
Let's explore several different types of JavaScript run-time errors.

1) Type Error
Commonly thrown when the variable is not the expected type for the operation. 
Here's a couple examples:
            (A)
        const x = 3;

        x();

        Throws TypeError: x is not a function.

            (B)
        let b;

        b.prop;

        Throws TypeError: Cannot read property 'prop' of undefined





2) Reference Error
Thrown in cases where the variable is not defined. 
More technically, the reference cannot be found:

            (A)
        z();
        Throws ReferenceError: z is not defined.





3) Syntax Error
Thrown in cases where the code is not valid JavaScript:

            (A)
        const a = 3;

        a.72;
        Throws SyntaxError: Unexpected number.

        If you use a transpiler like Babel JS this code may not pass the compilation step due to invalid syntax.





4) Range Error
Thrown when a value is passed to a function where the value is not within the intended range of accepted values. 
For example, an array initializer:

            (A)
        new Array(Infinity)
        Throws RangeError: Invalid array length.